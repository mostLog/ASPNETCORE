
@{
    Layout = null;
}

<!DOCTYPE html>

<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <title>Index</title>
    <!--引入element ui样式-->
    <link rel="stylesheet" href="https://cdn.bootcss.com/element-ui/2.0.5/theme-chalk/index.css">
    <style>
        .query-form {
            padding-left:15px;
            padding-top: 25px;
            background-color: #f2f2f2;
        }
    </style>
</head>
<body style="padding:15px;">
    <div id="app">
        <el-row>
            <el-col :span="24">
                <template>
                    <!--搜索条件-->
                    <el-form :inline="true" :model="tableSearchParams" class="query-form">
                        <el-form-item>
                            <el-autocomplete prefix-icon="el-icon-search"
                                             v-model="tableSearchParams.dataTypeName"
                                             :fetch-suggestions="querySearchAsync"
                                             placeholder="请输入数据类别"
                                             v-on:select="handleSelect">
                                <template slot-scope="props">
                                    <span>{{ props.item.name }}({{ props.item.className }})</span>
                                </template>
                            </el-autocomplete>
                        </el-form-item>
                        <el-form-item>
                            <el-input v-model="tableSearchParams.remark" prefix-icon="el-icon-search" placeholder="请输入备注信息"></el-input>
                        </el-form-item>
                        <el-form-item>
                            <el-button type="primary" v-on:click="getPagedPushTexts">查询</el-button>
                        </el-form-item>
                    </el-form>
                    <el-table :data="tableData"
                              stripe
                              style="width: 100%">
                        <el-table-column type="selection"
                                         align="center"
                                         header-align="center"
                                         width="55">
                        </el-table-column>
                        <el-table-column prop="textType"
                                         align="center"
                                         header-align="center"
                                         label="信息类别"
                                         width="200">
                        </el-table-column>
                        <el-table-column prop="pushDateTime"
                                         align="center"
                                         label="推送日期"
                                         header-align="center"
                                         width="180">
                        </el-table-column>
                        <el-table-column align="center"
                                         header-align="center"
                                         label="Url地址">
                            <template slot-scope="scope">
                                <el-button type="text" size="small" v-on:click="openHref(scope.row)">
                                    {{scope.row.text}}
                                </el-button>
                            </template>
                        </el-table-column>
                        <el-table-column prop="remark"
                                         align="center"
                                         header-align="center"
                                         width="180"
                                         label="备注">
                        </el-table-column>
                    </el-table>
                    <div class="table-page" v-show="this.totalCount>=this.pageSize">
                        <el-pagination background
                                       v-on:size-change="handleSizeChange"
                                       v-on:current-change="handleCurrentChange"
                                       :current-page="tableSearchParams.pageIndex"
                                       :page-sizes="[10, 20, 30, 40]"
                                       :page-size="tableSearchParams.pageSize"
                                       layout="prev, pager, next, jumper,total, sizes"
                                       :total="totalCount">
                        </el-pagination>
                    </div>
                </template>
            </el-col>
        </el-row>
    </div>

    <!-- 先引入 Vue -->
    <script src="https://cdn.bootcss.com/vue/2.5.9/vue.js"></script>
    <script src="https://cdn.bootcss.com/vue-resource/1.3.4/vue-resource.min.js"></script>
    <!-- 引入组件库 -->
    <script src="https://cdn.bootcss.com/element-ui/2.0.5/index.js"></script>
    <script type="text/javascript">
        var Main = {
            data() {
                return {
                    tableData: [],
                    totalCount: 0,
                    //表格搜索条件
                    tableSearchParams: {
                        pageIndex: 1,
                        pageSize: 10,
                        dataTypeId: '',
                        dataTypeName:'',
                        remark:''
                    },
                    currentCheckRow: {}
                };
            },
            //实例创建完成后立即调用
            created: function () {
                this.getPagedPushTexts();
            },
            methods: {
                getPagedPushTexts(params) {
                    this.$http.post('/Chrome/GetPagedPushTexts', {
                        isWriteDb: true,
                        remark: this.tableSearchParams.remark,
                        dataTypeId:this.tableSearchParams.dataTypeId,
                        pageIndex: this.tableSearchParams.pageIndex,
                        pageSize: this.tableSearchParams.pageSize
                    }, { emulateJSON: true }).then(
                        successResponse => {
                            //数据赋值
                            this.tableData = successResponse.body.data;
                            //数量赋值
                            this.totalCount = successResponse.body.count;
                        },
                        failResponse => {

                        });
                },
                handleSizeChange(size) {
                    this.tableSearchParams.pageSize = size;
                    this.getPagedPushTexts();
                },
                handleCurrentChange(page) {
                    this.tableSearchParams.pageIndex = page;
                    //获取当前点击节点
                    this.getPagedPushTexts();
                },
                handleSelect(item) {
                    this.tableSearchParams.dataTypeName = item.name;
                    this.tableSearchParams.dataTypeId = item.dataTypeId;
                },
                //
                querySearchAsync(queryString, callback) {
                    //如果输入条件为空
                    if (!queryString) {
                        this.tableSearchParams.dataTypeName = '';
                        this.tableSearchParams.dataTypeId = '';
                        return;
                    }
                    this.$http.get('/DataType/QueryDataTypeAsync', {
                        params: {
                            searchText: queryString
                        }
                    }).then(
                        successResponse => {
                            setTimeout(() => {
                                callback(successResponse.body);
                            }, 500);
                        },
                        failResponse => {

                        });
                },
                openHref(row) { 
                    window.open(row.text);
                }
            }
        };
        var Ctor = Vue.extend(Main);
        new Ctor().$mount('#app');
    </script>
</body>
</html>
